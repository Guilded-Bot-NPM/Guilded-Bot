on:
  push:
    branches:
      - master

name: Publish Release
jobs:
  # New job, this job is called "docs" and will run on the latest version of Ubuntu
  # This job will run the "actions/checkout@v2" action to check out the code
  # This job will run the "actions/setup-node@v1" action to setup Node.js
  # This job will run the "npm i jsdoc -g" command to install JSDoc globally
  # This job will run the "npm run docs" command to generate the documentation
  # If the job is successful, go to the next job
  docs:
    name: Generate documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install JSDoc
        run: npm i jsdoc -g
      - name: Generate documentation
        run: npm run docs-gh
      - name: ZIP documentation
        run: zip -r docs.zip docs

  # New job, this job is called "release" and will run on the latest version of Ubuntu
  # This job will run the "actions/checkout@v2" action to check out the code
  # This job will run the "actions/setup-node@v1" action to setup Node.js
  # This job will run the "npm ci" command to install the dependencies
  # This job will run the "npm run test" command to run the tests
  # If the job is successful, go to the next job
  # This job need the "docs" job to be successful
  release:
    name: Release
    needs: docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci & npm i jest -g
      - name: Run tests
        run: npm run test


  # New job, this job is called "publish" and will run on the latest version of Ubuntu
  # This job need the "release" and "docs" jobs to be successful
  # This job will run the "actions/checkout@v2" action to check out the code
  # This job will launch a new release with the tag name
  # This job will upload the all code in the repository to the release as an archive
  # This job will upload the documentation to the release (the documentation is in the "docs" folder)

  publish:
    name: Publish
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: ZIP Code
        run: zip -r code.zip .
      - name: Download JSDoc
        run: npm i jsdoc -g
      - name: Generate documentation
        run: npm run docs-gh
      - name: ZIP documentation
        run: zip -r docs.zip docs
      - name: Create a variable for node-version
        # Now, need get the version of the package.json"
        run: echo "NODE_VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.ACCESS_TOKEN }}
          automatic_release_tag: ${{ env.NODE_VERSION }}
          draft: false
          prerelease: false
          title: Release ${{ env.NODE_VERSION }}
          files: |
            code.zip
            docs.zip